###展示一下完整 work­flow 文件：
name: OpenWrt-ASUS_RT-Acrh17
on: push

jobs:
  build:
    name: Build ASUS_RT-Acrh17
    runs-on: ubuntu-latest
    steps:
    - name: Installation depends
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \vim wget xmlto xxd zlib1g-dev python3-setuptools
    - name: 克隆源代码
      run: |
        git clone https://github.com/coolsnowwolf/lede
        cd lede
        sed -i '$a src-git small8 https://github.com/kenzok8/small-package' feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
        sed -i 's/192.168.1.1/192.168.8.1/g' package/base-files/files/bin/config_generate
        sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: 生成配置文件
      run: |
        cd lede
        rm -f ./.config*
        touch ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 编译ASUS_RT-Acrh17的固件:
          cat >> .config <<EOF
          CONFIG_TARGET_ipq40xx=y
          CONFIG_TARGET_ipq40xx_DEVICE_asus_rt-acrh17=y
          CONFIG_TARGET_BOARD="ipq40xx"
          EOF
          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-argonne=y
          EOF
          # 常用LuCI插件
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-cpufreq=y
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-mosdns=y
          CONFIG_PACKAGE_luci-app-vssr=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-smartdns=y
          EOF
          # 添加自定义源
          cat >> feeds.conf.default <<EOF
          src-git kenzok8 https://github.com/kenzok8/small-package.git
          src-git small https://github.com/kenzok8/small.git
          EOF
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_TARGET_ROOTFS_SQUASHFS=y
          CONFIG_KERNEL_BUILD_USER="ASUS_RT-Acrh17"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          EOF

        sed -i 's/^[ \t]*//g' ./.config
        make defconfig
  
    - name: 下载第三方软件包
      run: |
        cd lede
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: 编译
      run: |
        cd lede
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin	
    - name: 上传固件目录
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
